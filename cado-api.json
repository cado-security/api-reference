{"openapi": "3.1.0", "info": {"title": "Cado Platform API", "description": "\nThe documentation reference for the Cado platform's RESTful API. \nThe API can integrate with every part of the platform, from user management, querying timeline data, and importing evidence from the cloud.\nWe provide some <a href=\"https://github.com/cado-security/cado-api-examples\">example Python scripts</a> to help you get started.\n<br /><br />\nUsing the API requires an API key, which can be <a href=\"https://docs.cadosecurity.com/cado-response/manage/integrations/api-overview\">obtained from the Cado platform</a>.\nThis API key needs to be used with the `Authorization` header in the Bearer format. For example: <code>Authorization: Bearer YOUR_API_KEY</code>.\n<br /><br />\nEach API will have a few extra parameters listed in the description, these parameters describe how the API behaves and what it expects. The parameters we list are:\n<ul>\n    <li><b>Feature Lifecycle</b>: This indicates if the API is in <code>beta</code> or <code>production</code>. If the API is in beta, you may need to enable it in the Experiments settings inside the platform. APIs with a <code>beta</code> flag are considered unstable and are subject to change or removal at any point, and are not recommended for production use.</li>\n    <li><b>Admin Only</b>: This indicates if the API requires an administrator user account.</li>\n</ul>\n", "version": "", "x-logo": {"altText": "Cado Security", "url": "static/logo.png"}}, "components": {"securitySchemes": {"bearerAuth": {"type": "http", "scheme": "bearer", "bearerFormat": "JWT"}}}, "paths": {"/api/v3/import/microsoft365/ual": {"post": {"x-Feature Lifecycle": "alpha", "x-Admin Only": "no", "summary": "Import a Microsoft 365 Unified Audit Logs", "description": "Import a set of Microsoft 365 Unified Audit Logs.", "tags": ["Import from Microsoft 365"], "security": [{"bearerAuth": []}], "parameters": [], "requestBody": {"required": true, "content": {"application/json": {"schema": {"type": "object", "required": ["start_time", "end_time", "credentials", "project_id"], "properties": {"start_time": {"description": "The start time of the logs to import. This should be in Unix Epoch format.", "type": "integer"}, "end_time": {"description": "The end time of the logs to import. This should be in Unix Epoch format.", "type": "integer"}, "credentials": {"description": "The credentials to use to authenticate with the Microsoft 365 API.", "type": "string"}, "workload": {"description": "The Microsoft 365 workload to import logs from.", "type": "string", "default": "all", "enum": ["exchange", "sharepoint", "aad", "onedrive", "defender", "all"]}, "user_ids": {"description": "A list of user IDs to import logs for. If not provided, logs for all users will be imported.", "type": "array", "items": {"type": "string"}}, "ip_addresses": {"description": "A list of IP addresses to import logs for. If not provided, logs for all IP addresses will be imported.", "type": "array", "items": {"type": "string"}}, "project_id": {"description": "The ID of associated Cado project logs will be imported into.", "type": "integer"}}}}}}, "responses": {"default": {"description": "A response indicating an error has occurred.", "content": {"application/json": {"schema": {"type": "object", "required": ["status", "message", "code"], "properties": {"status": {"type": "string", "description": "The status of the response, in this context, the value will be \"error\".", "default": "error", "enum": ["error"]}, "message": {"type": "string", "description": "The error message returned by the API. In some cases, the message will contain a link to documentation for further troubleshooting."}, "code": {"type": "string", "description": "An error code that can be given to Cado support for further troubleshooting."}, "data": {"type": "object", "description": "Any supporting data returned by the API that can help with further troubleshooting."}}}}}}, "200": {"description": "A new pipeline object is returned, indicating a successful kick-off of a pipeline. You can see the <a href=\"#\">Pipeline API</a> documentation for information on getting details about this pipeline.", "content": {"application/json": {"schema": {"type": "object", "required": ["status", "data"], "properties": {"status": {"enum": ["success"], "type": "string", "description": "The status of the response, in this context, the value will be \"success\".", "default": "success"}, "data": {"type": "object", "description": "The data containing the new processing pipeline.", "schema": null, "required": ["pipeline_id"], "properties": {"pipeline_id": {"type": "integer", "description": "The ID of the import pipeline created."}}}}}}}}}}}, "/api/v3/notifications/{notification_id}": {"patch": {"x-Feature Lifecycle": "alpha", "x-Admin Only": "yes", "summary": "Update a notification to be read or unread", "description": "Update a notification to be read or unread.", "tags": ["Notifications"], "security": [{"bearerAuth": []}], "parameters": [{"name": "notification_id", "in": "path", "required": true, "description": "Id of the notification to update", "schema": {"type": "integer", "example": 1}}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"type": "object", "required": ["is_viewed"], "properties": {"is_viewed": {"type": "boolean", "description": "Whether a notification has been viewed or not"}}}}}}, "responses": {"default": {"description": "A response indicating an error has occurred.", "content": {"application/json": {"schema": {"type": "object", "required": ["status", "message", "code"], "properties": {"status": {"type": "string", "description": "The status of the response, in this context, the value will be \"error\".", "enum": ["error"], "default": "error"}, "message": {"type": "string", "description": "The error message returned by the API. In some cases, the message will contain a link to documentation for further troubleshooting."}, "code": {"type": "string", "description": "An error code that can be given to Cado support for further troubleshooting."}, "data": {"type": "object", "description": "Any supporting data returned by the API that can help with further troubleshooting."}}}}}}, "200": {"description": "Successfully updated notification", "content": {"application/json": {"schema": {"type": "object", "required": ["status", "data"], "properties": {"status": {"type": "string", "description": "The status of the response, in this context, the value will be \"success\".", "enum": ["success"], "default": "success"}, "data": {"type": "object", "required": ["id", "message", "level", "notification_type", "is_viewed", "created"], "properties": {"id": {"type": "integer", "description": "The unique id of the notification model instance"}, "is_viewed": {"type": "boolean", "description": "Whether the notification has been viewed or not"}, "message": {"type": "string", "description": "The message of the notification"}, "created": {"type": "number", "description": "Creation time as a Unix timestamp"}, "level": {"type": "string", "description": "The level of the notification"}, "project_id": {"type": "integer", "description": "The unique id of the project"}, "evidence_id": {"type": "integer", "description": "The unique id of the evidence instance"}, "notification_type": {"type": "string", "enum": ["System", "Acquisition", "Processing", "Authentication", "Other"], "description": "The type of notification"}}}}}}}}}}, "delete": {"x-Feature Lifecycle": "alpha", "x-Admin Only": "yes", "summary": "Delete a notification", "description": "Delete a notification.", "tags": ["Notifications"], "security": [{"bearerAuth": []}], "parameters": [{"name": "notification_id", "in": "path", "required": true, "description": "Id of the notification to update", "schema": {"type": "integer", "example": 1}}], "responses": {"default": {"description": "A response indicating an error has occurred.", "content": {"application/json": {"schema": {"type": "object", "required": ["status", "message", "code"], "properties": {"status": {"type": "string", "enum": ["error"], "description": "The status of the response, in this context, the value will be \"error\".", "default": "error"}, "message": {"type": "string", "description": "The error message returned by the API. In some cases, the message will contain a link to documentation for further troubleshooting."}, "code": {"type": "string", "description": "An error code that can be given to Cado support for further troubleshooting."}, "data": {"type": "object", "description": "Any supporting data returned by the API that can help with further troubleshooting."}}}}}}, "200": {"description": "Successfully deleted notification", "content": {"application/json": {"schema": {"type": "object", "required": ["status"], "properties": {"status": {"type": "string", "description": "The status of the response, in this context, the value will be \"success\".", "enum": ["success"], "default": "success"}}}}}}}}, "get": {"x-Feature Lifecycle": "alpha", "x-Admin Only": "yes", "summary": "Get a notification", "description": "Get a notification information.", "tags": ["Notifications"], "security": [{"bearerAuth": []}], "parameters": [{"name": "notification_id", "in": "path", "required": true, "description": "Id of the notification to delete", "schema": {"type": "integer", "example": 1}}], "responses": {"200": {"description": "Retrieved notification information", "content": {"application/json": {"schema": {"type": "object", "required": ["status", "data"], "properties": {"status": {"type": "string", "description": "The status of the response, in this context, the value will be \"success\".", "enum": ["success"], "default": "success"}, "data": {"type": "object", "required": ["id", "message", "level", "notification_type", "is_viewed", "created"], "properties": {"id": {"type": "integer", "description": "The unique id of the notification model instance"}, "is_viewed": {"type": "boolean", "description": "Whether the notification has been viewed or not"}, "message": {"type": "string", "description": "The message of the notification"}, "created": {"type": "number", "description": "Creation time as a Unix timestamp"}, "level": {"type": "string", "description": "The level of the notification"}, "project_id": {"type": "integer", "description": "The unique id of the project"}, "evidence_id": {"type": "integer", "description": "The unique id of the evidence instance"}, "notification_type": {"type": "string", "enum": ["System", "Acquisition", "Processing", "Authentication", "Other"], "description": "The type of notification"}}}}}}}}, "default": {"description": "A response indicating an error has occurred.", "content": {"application/json": {"schema": {"type": "object", "required": ["status", "message", "code"], "properties": {"status": {"type": "string", "enum": ["error"], "description": "The status of the response, in this context, the value will be \"error\".", "default": "error"}, "message": {"type": "string", "description": "The error message returned by the API. In some cases, the message will contain a link to documentation for further troubleshooting."}, "code": {"type": "string", "description": "An error code that can be given to Cado support for further troubleshooting."}, "data": {"type": "object", "description": "Any supporting data returned by the API that can help with further troubleshooting."}}}}}}}}}, "/api/v3/notifications": {"get": {"x-Feature Lifecycle": "alpha", "x-Admin Only": "yes", "summary": "Get a list of notifications", "description": "Get a notification information.", "tags": ["Notifications"], "parameters": [{"name": "project_id", "in": "query", "required": false, "description": "The unique id of the project to get notifications for", "schema": {"type": "integer"}}, {"name": "evidence_id", "in": "query", "required": false, "description": "The unique id of the evidence item to get notifications for", "schema": {"type": "integer"}}, {"name": "is_viewed", "in": "query", "required": false, "description": "Whether to get viewed or not viewed notifications", "schema": {"type": "boolean"}}, {"name": "from_date", "in": "query", "required": false, "description": "The start date to get notifications from", "schema": {"type": "integer"}}, {"name": "to_date", "in": "query", "required": false, "description": "The end date to get notifications", "schema": {"type": "integer"}}, {"name": "page", "in": "query", "required": true, "description": "The page number to get notifications for", "schema": {"type": "integer"}}, {"name": "per_page", "in": "query", "required": true, "description": "The number of notifications to get per page", "schema": {"type": "integer"}}, {"name": "environment_ids", "in": "query", "required": false, "description": "A list of environment ids to get notifications for", "schema": {"type": "array", "items": {"type": "integer"}}}, {"name": "notification_type", "in": "query", "required": false, "description": "The type of notification to get i.e System, Acquisition etc", "schema": {"type": "string"}}, {"name": "level", "in": "query", "required": false, "description": "The level of the notification to get i.e Info, Warning, Error", "schema": {"type": "string", "enum": ["Info", "Warning", "Error"]}}], "security": [{"bearerAuth": []}], "responses": {"200": {"description": "Retrieved a list of notifications", "content": {"application/json": {"schema": {"type": "object", "required": ["status", "data", "pagination"], "properties": {"pagination": {"type": "object", "properties": {"current_page": {"description": "The current page number", "type": "integer"}, "total_pages": {"description": "The total number of pages", "type": "integer"}, "total_records": {"description": "The total number of records", "type": "integer"}, "type": {"default": "page", "description": "The type of the pagination", "enum": ["page"], "type": "string"}}, "required": ["total_records", "current_page", "total_pages", "type"]}, "status": {"type": "string", "description": "The status of the response, in this context, the value will be \"success\".", "enum": ["success"], "default": "success"}, "data": {"type": "array", "items": {"type": "object", "required": ["id", "message", "level", "notification_type", "is_viewed", "created"], "properties": {"id": {"type": "integer", "description": "The unique id of the notification model instance"}, "is_viewed": {"type": "boolean", "description": "Whether the notification has been viewed or not"}, "message": {"type": "string", "description": "The message of the notification"}, "created": {"type": "number", "description": "Creation time as a Unix timestamp"}, "level": {"type": "string", "description": "The level of the notification"}, "project_id": {"type": "integer", "description": "The unique id of the project"}, "evidence_id": {"type": "integer", "description": "The unique id of the evidence instance"}, "notification_type": {"type": "string", "enum": ["System", "Acquisition", "Processing", "Authentication", "Other"], "description": "The type of notification"}}}}}}}}}, "default": {"description": "A response indicating an error has occurred.", "content": {"application/json": {"schema": {"type": "object", "required": ["status", "message", "code"], "properties": {"status": {"type": "string", "enum": ["error"], "description": "The status of the response, in this context, the value will be \"error\".", "default": "error"}, "message": {"type": "string", "description": "The error message returned by the API. In some cases, the message will contain a link to documentation for further troubleshooting."}, "code": {"type": "string", "description": "An error code that can be given to Cado support for further troubleshooting."}, "data": {"type": "object", "description": "Any supporting data returned by the API that can help with further troubleshooting."}}}}}}}}}, "/api/v3/platform": {"get": {"x-Feature Lifecycle": "alpha", "x-Admin Only": "no", "summary": "Platform information", "description": "Information about the platform, update availability, etc.", "tags": ["Platform"], "security": [{"bearerAuth": []}], "parameters": [], "responses": {"200": {"description": "Platform information", "content": {"application/json": {"schema": {"type": "object", "required": ["status", "data"], "properties": {"status": {"type": "string", "description": "The status of the response, in this context, the value will be \"success\".", "default": "success", "enum": ["success"]}, "data": {"type": "object", "required": ["disk", "raw_disk", "cpu_percent", "memory", "latest_version", "latest_release_date", "backend_version", "backend_release_date", "platform", "supports_azure", "supports_aws", "ami_id", "allow_updates", "high_availability", "govcloud", "cado_host_version"], "properties": {"instance_utilization": {"type": "object", "description": "Instance utilization information", "required": ["disk", "cpu_percent", "memory"], "properties": {"disk": {"description": "Disk information in GB", "required": ["total_space", "used_space", "free_space"], "type": "object", "properties": {"total_space": {"type": "integer"}, "used_space": {"type": "integer"}, "free_space": {"type": "integer"}, "raw_disk": {"type": "string"}}}, "cpu_percent": {"type": "number", "description": "CPU usage percentage"}, "memory": {"type": "object", "description": "Memory information in Mb", "required": ["available", "total"], "properties": {"available": {"type": "number"}, "total": {"type": "number"}}}}}, "version_info": {"type": "object", "description": "Version information", "required": ["latest_version", "latest_release_date", "backend_version", "backend_release_date", "cado_host_version"], "properties": {"latest_version": {"type": "string", "description": "The latest version of the platform"}, "latest_release_date": {"type": "integer", "description": "The release date of the latest version"}, "backend_version": {"type": "string", "description": "The current version of the platform"}, "backend_release_date": {"type": "integer", "description": "The release date of the current version"}, "cado_host_version": {"type": "string", "description": "The version of Cado Host the platform will use to perform triage and Kubernetes captures"}}}, "deployment_details": {"type": "object", "description": "Platform deployment details", "required": ["cloud", "supports_azure", "supports_aws", "high_availability", "govcloud", "ami_id"], "properties": {"cloud": {"type": "string", "description": "The cloud the platform is running in"}, "supports_azure": {"type": "boolean"}, "supports_aws": {"type": "boolean"}, "high_availability": {"type": "boolean", "description": "Whether the system is in a high availability configuration"}, "govcloud": {"type": "boolean", "description": "Is the platform running in AWS GovCloud"}, "ami_id": {"type": "string", "description": "The AMI ID of the instance"}}}, "allow_updates": {"type": "boolean", "description": "Whether native updates are allowed. If deployed using Terraform, this will be False"}}}}}}}}, "default": {"description": "A response indicating an error has occurred.", "content": {"application/json": {"schema": {"type": "object", "required": ["status", "message", "code"], "properties": {"code": {"description": "An error code that can be given to Cado support for further troubleshooting.", "type": "string"}, "data": {"description": "Any supporting data returned by the API that can help with further troubleshooting.", "type": "object"}, "message": {"description": "The error message returned by the API. In some cases, the message will contain a link to documentation for further troubleshooting.", "type": "string"}, "status": {"default": "error", "description": "The status of the response, in this context, the value will be \"error\".", "enum": ["error"], "type": "string"}}}}}}}}}, "/api/v3/import/aws/lambda": {"get": {"summary": "Browse a list of Lambda functions", "description": "Browse a list of Lambda functions inside a specific AWS region and account.", "parameters": [{"name": "cloud_id", "in": "query", "required": true, "schema": {"type": "string"}, "description": "The alias of the chosen AWS account to browse. See the <a href=\"#\">Clouds API</a> documentation for more info on obtaining the cloud_id for a specific AWS account."}, {"name": "region", "in": "query", "required": true, "schema": {"type": "string"}, "description": "The AWS region to browse Lambda functions in."}, {"name": "cursor", "in": "query", "required": false, "schema": {"type": "string"}, "description": "The pointer to the next page given by the response of the previous/current page."}, {"name": "max_items", "in": "query", "required": false, "schema": {"type": "integer", "default": 25}, "description": "The amount of items to be given per page. If left blank, the default will be 25."}], "responses": {"200": {"content": {"application/json": {"schema": {"properties": {"data": {"type": "array", "items": {"type": "object", "description": "An Lambda function", "required": ["name", "last_modified", "package_type"], "properties": {"name": {"type": "string", "description": "The name of the Lambda function."}, "last_modified": {"type": "number", "description": "The date and time the Lambda function was last modified."}, "package_type": {"type": "string", "description": "The package type of the Lambda function."}}}}, "pagination": {"type": "object", "properties": {"type": {"type": "string", "enum": ["cursor"], "default": "cursor", "description": "A string indicating the type of pagination supported by the API. In this context, the value will be \"cursor\"."}, "current_token": {"type": "string", "description": "A string representing the pointer to this current page."}, "next_token": {"type": "string", "description": "A string representing a cursor to the next page. Use this in place of the `cursor` attribute to get the next page."}, "previous_token": {"type": "string", "description": "A string representing a cursor to the previous page. Use this in place of the `cursor` attribute to get the previous page."}}, "required": ["type"]}, "status": {"default": "success", "description": "The status of the response, in this context, the value will be \"success\".", "enum": ["success"], "type": "string"}}, "required": ["data", "status", "pagination"], "type": "object"}}}, "description": ""}, "default": {"content": {"application/json": {"schema": {"properties": {"code": {"description": "An error code that can be given to Cado support for further troubleshooting.", "type": "string"}, "data": {"description": "Any supporting data returned by the API that can help with further troubleshooting.", "type": "object"}, "message": {"description": "The error message returned by the API. In some cases, the message will contain a link to documentation for further troubleshooting.", "type": "string"}, "status": {"default": "error", "description": "The status of the response, in this context, the value will be \"error\".", "enum": ["error"], "type": "string"}}, "required": ["status", "message", "code"], "type": "object"}}}, "description": "A response indicating an error has occurred."}}, "security": [{"bearerAuth": []}], "tags": ["Import from AWS"], "x-Admin Only": "no", "x-Feature Lifecycle": "alpha"}, "post": {"x-Feature Lifecycle": "alpha", "x-Admin Only": "no", "summary": "Start an import of an Lambda function into a specified project.", "description": "Start an import of a running Lambda container into the specified project. A processing pipeline will be returned that details the status of the processing.", "tags": ["Import from AWS"], "security": [{"bearerAuth": []}], "parameters": [], "requestBody": {"required": true, "content": {"application/json": {"schema": {"type": "object", "required": ["function", "cloud_id", "region", "project_id"], "properties": {"function": {"type": "string", "description": "The name of the Lambda function you wish to import."}, "cloud_id": {"type": "string", "description": "The alias of the chosen AWS account to browse. See the <a href=\"#\">Clouds API</a> documentation for more info on obtaining the cloud_id for a specific AWS account."}, "region": {"type": "string", "description": "The AWS region where the Lambda is located."}, "project_id": {"type": "integer", "description": "The ID of the Cado project that you want to import the data into."}}}}}}, "responses": {"default": {"description": "A response indicating an error has occurred.", "content": {"application/json": {"schema": {"type": "object", "required": ["status", "message", "code"], "properties": {"status": {"type": "string", "description": "The status of the response, in this context, the value will be \"error\".", "default": "error", "enum": ["error"]}, "message": {"type": "string", "description": "The error message returned by the API. In some cases, the message will contain a link to documentation for further troubleshooting."}, "code": {"type": "string", "description": "An error code that can be given to Cado support for further troubleshooting."}, "data": {"type": "object", "description": "Any supporting data returned by the API that can help with further troubleshooting."}}}}}}, "200": {"description": "A new pipeline object is returned, indicating a successful kick-off of a pipeline. You can see the <a href=\"#\">Pipeline API</a> documentation for information on getting details about this pipeline.", "content": {"application/json": {"schema": {"type": "object", "required": ["status", "data"], "properties": {"status": {"enum": ["success"], "type": "string", "description": "The status of the response, in this context, the value will be \"success\".", "default": "success"}, "data": {"type": "object", "description": "The data containing the new processing pipeline.", "schema": null, "required": ["pipeline_id"], "properties": {"pipeline_id": {"type": "integer", "description": "The numerical ID assigned to the pipeline."}}}}}}}}}}}, "/api/v3/evidences": {"get": {"x-Feature Lifecycle": "alpha", "x-Admin Only": "no", "summary": "List evidences", "description": "List evidences visible to the current user", "tags": ["Evidence"], "security": [{"bearerAuth": []}], "parameters": [{"name": "project_id", "in": "query", "required": false, "schema": {"type": "integer"}, "description": "Filter by project id."}, {"name": "page", "in": "query", "required": false, "schema": {"type": "integer", "default": 1}, "description": "Which page or results to return."}, {"name": "per_page", "in": "query", "required": false, "schema": {"type": "integer", "default": 10}, "description": "How many results per page."}, {"name": "order_by", "in": "query", "required": false, "schema": {"type": "string", "enum": ["id", "-id"], "default": "-id"}, "description": "The way in which to order evidences."}], "responses": {"default": {"description": "A response indicating an error has occurred.", "content": {"application/json": {"schema": {"type": "object", "required": ["status", "message", "code"], "properties": {"status": {"type": "string", "description": "The status of the response, in this context, the value will be \"error\".", "enum": ["error"], "default": "error"}, "message": {"type": "string", "description": "The error message returned by the API. In some cases, the message will contain a link to documentation for further troubleshooting."}, "code": {"type": "string", "description": "An error code that can be given to Cado support for further troubleshooting."}, "data": {"type": "object", "description": "Any supporting data returned by the API that can help with further troubleshooting."}}}}}}, "200": {"description": "A list of evidence objects.", "content": {"application/json": {"schema": {"type": "object", "required": ["status", "data", "pagination"], "properties": {"status": {"type": "string", "description": "The status of the response, in this context, the value will be \"success\".", "enum": ["success"], "default": "success"}, "data": {"type": "array", "items": {"type": "object", "required": ["id", "alarms", "items", "display_name", "log", "is_deleted"], "properties": {"alarms": {"type": "object", "description": "Summary of alarms detected in this evidence", "nullable": false, "required": ["malicious", "suspicious"], "properties": {"malicious": {"description": "Number of malicious alarms", "type": "integer"}, "suspicious": {"description": "Number of suspicious alarms", "type": "integer"}}}, "id": {"type": "integer", "description": "The ID of the evidence"}, "project_id": {"type": "integer", "description": "The ID of the project the evidence belongs to"}, "display_name": {"type": "string", "description": "The display name of the evidence"}, "log": {"type": "string", "description": "When the evidence started processing"}, "is_deleted": {"type": "boolean", "description": "Whether the evidence has been deleted"}, "cloud_resource_id": {"type": "string", "description": "The ID of the cloud resource"}, "cloud_resource_type": {"type": "string", "description": "The type of the cloud resource"}, "cloud_account_id": {"type": "string", "description": "The ID of the cloud account"}, "cloud_account_type": {"type": "string", "description": "The type of the cloud account"}, "automation_rule_id": {"type": "integer", "description": "The ID of the automation rule"}, "cloud_roles": {"type": "array", "items": {"type": "string"}, "description": "The roles of the cloud resource"}, "parent_cloud_resource_id": {"type": "string", "description": "The ID of the parent cloud resource"}, "environment_id": {"type": "integer", "description": "The ID of the environment"}, "description": {"type": "string", "description": "The description of the evidence"}, "encase_path": {"type": "string", "description": "The path to the Encase file"}, "preservation_path": {"type": "string", "description": "The path to the preservation file"}, "items": {"type": "array", "items": {"type": "object", "required": ["id", "type", "operating_system"], "properties": {"id": {"type": "integer", "description": "The ID of the evidence item"}, "source_file": {"type": "string", "description": "The source file of the evidence item"}, "disk_size": {"type": "integer", "description": "The disk size of the evidence item"}, "sha256": {"type": "string", "description": "The SHA256 hash of the evidence item"}, "hostname": {"type": "string", "description": "The hostname of the evidence item"}, "type": {"type": "string", "enum": ["disk", "memory", "lambda", "screenshot", "cloudtrail_logs", "cloudwatch_logs", "activity_logs", "vpc_logs", "office_365_ual", "azure_entra_signin", "azure_entra_audit", "google_workspace"], "default": "disk", "description": "The type of the evidence item"}, "operating_system": {"type": "string", "enum": ["Linux", "Windows", "macOS", "Unknown"], "default": "Unknown", "description": "The operating system of the evidence item"}, "is_cado_host": {"type": "boolean", "description": "Whether the evidence item is a Cado host item"}, "has_network_data": {"type": "boolean", "description": "Whether the evidence item has network data"}}}}}}}, "pagination": {"type": "object", "description": "Pagination information", "required": ["type", "total_records", "current_page", "total_pages"], "properties": {"type": {"type": "string", "enum": ["page"], "default": "page", "description": "A string indicating the type of pagination supported by the API. In this context, the value will be \"page\"."}, "total_records": {"type": "integer", "description": "An integer representing the total amount of data we're paging."}, "current_page": {"type": "integer", "description": "An integer representing the current page of data (we use this to work out next and previous pages). NOTE: this is 1-indexed (i.e. it starts at 1)."}, "total_pages": {"type": "integer", "description": "An integer representing the total number of pages."}}}}}}}}}}}, "/api/v3/evidences/{evidence_id}": {"patch": {"x-Feature Lifecycle": "alpha", "x-Admin Only": "no", "summary": "Update an evidence", "description": "Update evidence metadata", "tags": ["Evidence"], "security": [{"bearerAuth": []}], "parameters": [{"name": "evidence_id", "in": "path", "required": true, "schema": {"type": "integer"}, "description": "ID of the evidence you want to update."}], "requestBody": {"content": {"application/json": {"schema": {"type": "object", "description": "The evidence object to update. Currently only hostname and description can be updated.", "properties": {"hostname": {"type": "string", "description": "The new hostname of the evidence."}, "description": {"type": "string", "description": "The new description of the evidence."}}}}}}, "responses": {"default": {"description": "A response indicating an error has occurred.", "content": {"application/json": {"schema": {"type": "object", "required": ["status", "message", "code"], "properties": {"status": {"type": "string", "description": "The status of the response, in this context, the value will be \"error\".", "enum": ["error"], "default": "error"}, "message": {"type": "string", "description": "The error message returned by the API. In some cases, the message will contain a link to documentation for further troubleshooting."}, "code": {"type": "string", "description": "An error code that can be given to Cado support for further troubleshooting."}, "data": {"type": "object", "description": "Any supporting data returned by the API that can help with further troubleshooting."}}}}}}, "200": {"description": "Successfully updated an evidence.", "content": {"application/json": {"schema": {"type": "object", "required": ["status", "data"], "properties": {"status": {"type": "string", "description": "The status of the response, in this context, the value will be \"success\".", "enum": ["success"], "default": "success"}, "data": {"type": "object", "description": "The updated evidence object", "required": ["id", "alarms", "items", "display_name", "log", "is_deleted"], "properties": {"alarms": {"type": "object", "description": "Summary of alarms detected in this evidence", "nullable": false, "required": ["malicious", "suspicious"], "properties": {"malicious": {"description": "Number of malicious alarms", "type": "integer"}, "suspicious": {"description": "Number of suspicious alarms", "type": "integer"}}}, "id": {"type": "integer", "description": "The ID of the evidence"}, "project_id": {"type": "integer", "description": "The ID of the project the evidence belongs to"}, "display_name": {"type": "string", "description": "The display name of the evidence"}, "log": {"type": "string", "description": "When the evidence started processing"}, "is_deleted": {"type": "boolean", "description": "Whether the evidence has been deleted"}, "cloud_resource_id": {"type": "string", "description": "The ID of the cloud resource"}, "cloud_resource_type": {"type": "string", "description": "The type of the cloud resource"}, "cloud_account_id": {"type": "string", "description": "The ID of the cloud account"}, "cloud_account_type": {"type": "string", "description": "The type of the cloud account"}, "automation_rule_id": {"type": "integer", "description": "The ID of the automation rule"}, "cloud_roles": {"type": "array", "items": {"type": "string"}, "description": "The roles of the cloud resource"}, "parent_cloud_resource_id": {"type": "string", "description": "The ID of the parent cloud resource"}, "environment_id": {"type": "integer", "description": "The ID of the environment"}, "description": {"type": "string", "description": "The description of the evidence"}, "encase_path": {"type": "string", "description": "The path to the Encase file"}, "preservation_path": {"type": "string", "description": "The path to the preservation file"}, "items": {"type": "array", "items": {"type": "object", "required": ["id", "type", "operating_system"], "properties": {"id": {"type": "integer", "description": "The ID of the evidence item"}, "source_file": {"type": "string", "description": "The source file of the evidence item"}, "disk_size": {"type": "integer", "description": "The disk size of the evidence item"}, "sha256": {"type": "string", "description": "The SHA256 hash of the evidence item"}, "hostname": {"type": "string", "description": "The hostname of the evidence item"}, "type": {"type": "string", "enum": ["disk", "memory", "lambda", "screenshot", "cloudtrail_logs", "cloudwatch_logs", "activity_logs", "vpc_logs", "office_365_ual", "azure_entra_signin", "azure_entra_audit", "google_workspace"], "default": "disk", "description": "The type of the evidence item"}, "operating_system": {"type": "string", "enum": ["Linux", "Windows", "macOS", "Unknown"], "default": "Unknown", "description": "The operating system of the evidence item"}, "is_cado_host": {"type": "boolean", "description": "Whether the evidence item is a Cado host item"}, "has_network_data": {"type": "boolean", "description": "Whether the evidence item has network data"}}}}}}}}}}}}}, "delete": {"x-Feature Lifecycle": "alpha", "x-Admin Only": "no", "summary": "Delete an evidence", "description": "Delete all evidence data from elasticsearch", "tags": ["Evidence"], "security": [{"bearerAuth": []}], "parameters": [{"name": "evidence_id", "in": "path", "required": true, "schema": {"type": "integer"}, "description": "ID of the evidence you want to delete."}], "responses": {"default": {"description": "A response indicating an error has occurred.", "content": {"application/json": {"schema": {"type": "object", "required": ["status", "message", "code"], "properties": {"status": {"type": "string", "description": "The status of the response, in this context, the value will be \"error\".", "enum": ["error"], "default": "error"}, "message": {"type": "string", "description": "The error message returned by the API. In some cases, the message will contain a link to documentation for further troubleshooting."}, "code": {"type": "string", "description": "An error code that can be given to Cado support for further troubleshooting."}, "data": {"type": "object", "description": "Any supporting data returned by the API that can help with further troubleshooting."}}}}}}, "200": {"description": "Successfully delete an evidence.", "content": {"application/json": {"schema": {"type": "object", "required": ["status"], "properties": {"status": {"type": "string", "description": "The status of the response, in this context, the value will be \"success\".", "enum": ["success"], "default": "success"}}}}}}}}, "get": {"x-Feature Lifecycle": "alpha", "x-Admin Only": "no", "summary": "Get a singular evidence", "description": "Get an evidence by ID", "tags": ["Evidence"], "security": [{"bearerAuth": []}], "parameters": [{"name": "evidence_id", "in": "path", "required": true, "schema": {"type": "integer"}, "description": "ID of the evidence you want to get."}], "responses": {"default": {"description": "A response indicating an error has occurred.", "content": {"application/json": {"schema": {"type": "object", "required": ["status", "message", "code"], "properties": {"status": {"type": "string", "description": "The status of the response, in this context, the value will be \"error\".", "enum": ["error"], "default": "error"}, "message": {"type": "string", "description": "The error message returned by the API. In some cases, the message will contain a link to documentation for further troubleshooting."}, "code": {"type": "string", "description": "An error code that can be given to Cado support for further troubleshooting."}, "data": {"type": "object", "description": "Any supporting data returned by the API that can help with further troubleshooting."}}}}}}, "200": {"description": "Successful evidence retrieved.", "content": {"application/json": {"schema": {"type": "object", "required": ["status", "data", "pagination"], "properties": {"status": {"type": "string", "description": "The status of the response, in this context, the value will be \"success\".", "enum": ["success"], "default": "success"}, "data": {"type": "array", "items": {"type": "object", "required": ["id", "alarms", "items", "display_name", "log", "is_deleted"], "properties": {"alarms": {"type": "object", "description": "Summary of alarms detected in this evidence", "nullable": false, "required": ["malicious", "suspicious"], "properties": {"malicious": {"description": "Number of malicious alarms", "type": "integer"}, "suspicious": {"description": "Number of suspicious alarms", "type": "integer"}}}, "id": {"type": "integer", "description": "The ID of the evidence"}, "project_id": {"type": "integer", "description": "The ID of the project the evidence belongs to"}, "display_name": {"type": "string", "description": "The display name of the evidence"}, "log": {"type": "string", "description": "When the evidence started processing"}, "is_deleted": {"type": "boolean", "description": "Whether the evidence has been deleted"}, "cloud_resource_id": {"type": "string", "description": "The ID of the cloud resource"}, "cloud_resource_type": {"type": "string", "description": "The type of the cloud resource"}, "cloud_account_id": {"type": "string", "description": "The ID of the cloud account"}, "cloud_account_type": {"type": "string", "description": "The type of the cloud account"}, "automation_rule_id": {"type": "integer", "description": "The ID of the automation rule"}, "cloud_roles": {"type": "array", "items": {"type": "string"}, "description": "The roles of the cloud resource"}, "parent_cloud_resource_id": {"type": "string", "description": "The ID of the parent cloud resource"}, "environment_id": {"type": "integer", "description": "The ID of the environment"}, "description": {"type": "string", "description": "The description of the evidence"}, "encase_path": {"type": "string", "description": "The path to the Encase file"}, "preservation_path": {"type": "string", "description": "The path to the preservation file"}, "items": {"type": "array", "items": {"type": "object", "required": ["id", "type", "operating_system"], "properties": {"id": {"type": "integer", "description": "The ID of the evidence item"}, "source_file": {"type": "string", "description": "The source file of the evidence item"}, "disk_size": {"type": "integer", "description": "The disk size of the evidence item"}, "sha256": {"type": "string", "description": "The SHA256 hash of the evidence item"}, "hostname": {"type": "string", "description": "The hostname of the evidence item"}, "type": {"type": "string", "enum": ["disk", "memory", "lambda", "screenshot", "cloudtrail_logs", "cloudwatch_logs", "activity_logs", "vpc_logs", "office_365_ual", "azure_entra_signin", "azure_entra_audit", "google_workspace"], "default": "disk", "description": "The type of the evidence item"}, "operating_system": {"type": "string", "enum": ["Linux", "Windows", "macOS", "Unknown"], "default": "Unknown", "description": "The operating system of the evidence item"}, "is_cado_host": {"type": "boolean", "description": "Whether the evidence item is a Cado host item"}, "has_network_data": {"type": "boolean", "description": "Whether the evidence item has network data"}}}}}}}, "pagination": {"type": "object", "description": "Pagination information", "required": ["type", "total_records", "current_page", "total_pages"], "properties": {"type": {"type": "string", "enum": ["page"], "default": "page", "description": "A string indicating the type of pagination supported by the API. In this context, the value will be \"page\"."}, "total_records": {"type": "integer", "description": "An integer representing the total amount of data we're paging."}, "current_page": {"type": "integer", "description": "An integer representing the current page of data (we use this to work out next and previous pages). NOTE: this is 1-indexed (i.e. it starts at 1)."}, "total_pages": {"type": "integer", "description": "An integer representing the total number of pages."}}}}}}}}}}}, "/api/v3/projects": {"get": {"x-Feature Lifecycle": "alpha", "x-Admin Only": "no", "summary": "List projects", "description": "List projects visible to the current user", "tags": ["Projects"], "parameters": [{"name": "page", "in": "query", "required": false, "schema": {"type": "integer", "default": 1}, "description": "Which page or results to return, ordered by created desc."}, {"name": "per_page", "in": "query", "required": false, "schema": {"type": "integer", "default": 10}, "description": "How many results per page, ordered by created desc."}, {"name": "order_by", "in": "query", "required": false, "schema": {"type": "string", "enum": ["created", "-created"], "default": "-created"}}, {"name": "status", "in": "query", "required": false, "schema": {"type": "string", "enum": ["Collection & Analysis", "Containment", "Eradication", "Recovery", "Post incident activity", "Closed"]}}], "security": [{"bearerAuth": []}], "responses": {"default": {"description": "A response indicating an error has occurred.", "content": {"application/json": {"schema": {"type": "object", "required": ["status", "message", "code"], "properties": {"status": {"type": "string", "description": "The status of the response, in this context, the value will be \"error\".", "enum": ["error"], "default": "error"}, "message": {"type": "string", "description": "The error message returned by the API. In some cases, the message will contain a link to documentation for further troubleshooting."}, "code": {"type": "string", "description": "An error code that can be given to Cado support for further troubleshooting."}, "data": {"type": "object", "description": "Any supporting data returned by the API that can help with further troubleshooting."}}}}}}, "200": {"description": "List of projects", "content": {"application/json": {"schema": {"type": "object", "required": ["status", "data", "pagination"], "properties": {"status": {"type": "string", "description": "The status of the response, in this context, the value will be \"success\".", "enum": ["success"], "default": "success"}, "data": {"type": "array", "items": {"type": "object", "required": ["id", "created", "alarms", "evidences", "details", "ai_summary"], "properties": {"id": {"type": "integer", "description": "Project ID"}, "created": {"type": "number", "description": "created date (ms since epoch)"}, "alarms": {"type": "object", "description": "Summary of alarms detected in this project", "nullable": false, "required": ["malicious", "suspicious"], "properties": {"malicious": {"type": "integer"}, "suspicious": {"type": "integer"}}}, "evidences": {"description": "Number of evidences in this project", "type": "integer"}, "details": {"type": "object", "description": "User editable details about the project", "required": ["name", "description", "items_identified", "status"], "properties": {"name": {"type": "string", "description": "Project name"}, "description": {"type": "string"}, "items_identified": {"type": "integer"}, "status": {"type": "string", "enum": ["Collection & Analysis", "Containment", "Eradication", "Recovery", "Post incident activity", "Closed"]}}}, "ai_summary": {"type": "string", "nullable": true, "description": "Cado AI generated summary of the project"}}}}, "pagination": {"type": "object", "description": "Pagination information", "required": ["type", "total_records", "current_page", "total_pages"], "properties": {"type": {"type": "string", "enum": ["page"], "default": "page", "description": "A string indicating the type of pagination supported by the API. In this context, the value will be \"page\"."}, "total_records": {"type": "integer", "description": "An integer representing the total amount of data we're paging."}, "current_page": {"type": "integer", "description": "An integer representing the current page of data (we use this to work out next and previous pages). NOTE: this is 1-indexed (i.e. it starts at 1)."}, "total_pages": {"type": "integer", "description": "An integer representing the total number of pages."}}}}}}}}}}}, "/api/v3/pipelines": {"get": {"description": "List pipelines visible to the current user.", "parameters": [{"name": "page", "in": "query", "description": "Which page of results to return, ordered by created desc", "required": false, "schema": {"type": "integer", "default": 1}}, {"name": "per_page", "in": "query", "description": "How many results per page, ordered by created desc.", "required": false, "schema": {"type": "integer", "default": 10}}, {"name": "project_id", "in": "query", "description": "Filter by project id", "required": false, "schema": {"type": "integer"}}, {"name": "evidence_id", "in": "query", "description": "Filter by evidence id, Requires project_id", "required": false, "schema": {"type": "integer"}}, {"name": "triggering_pipeline_id", "in": "query", "description": "Filter by triggering pipeline id", "required": false, "schema": {"type": "integer"}}], "responses": {"200": {"content": {"application/json": {"schema": {"properties": {"data": {"type": "array", "items": {"type": "object", "required": ["aborted", "can_be_terminated", "created", "kick_off", "name", "pipeline", "subtasks", "summary", "terminated"], "properties": {"aborted": {"type": "boolean", "description": "Has the pipeline been aborted?"}, "can_be_terminated": {"type": "boolean", "description": "Can the pipeline be terminated?"}, "created": {"type": "number", "description": "Creation timestamp (ms since epoch)"}, "evidence": {"type": "object", "required": ["id", "name"], "description": "Details of the evidence the pipeline relates to", "properties": {"id": {"type": "integer", "description": "Evidence ID the pipeline relates to"}, "name": {"type": "string", "description": "Evidence name the pipeline relates to"}}}, "kick_off": {"type": "array", "description": "Details of the alert that kicked off the pipeline", "items": {"type": "string"}}, "name": {"type": "string", "description": "Pipeline name"}, "pipeline": {"type": "object", "required": ["id", "type"], "description": "Details of the pipeline", "properties": {"id": {"type": "integer", "description": "Pipeline ID"}, "type": {"type": "string", "description": "Type of pipeline", "enum": ["processing", "acquisition", "healthcheck", "inventory", "investigation_kicker", "accountdiscovery", "analysis", "remote_action"]}}}, "project": {"type": "object", "required": ["id", "name"], "description": "Details of the project the pipeline relates to", "properties": {"id": {"type": "integer", "description": "Project ID the pipeline relates to"}, "name": {"type": "string", "description": "Project name the pipeline relates to"}}}, "subtasks": {"type": "array", "description": "Details of the subtasks for the pipeline", "items": {"type": "object", "required": ["execution_duration", "finish_time", "name", "name_key", "notification_level", "progress_text", "start_time", "state"], "properties": {"execution_duration": {"type": "integer", "description": "Execution duration in seconds"}, "finish_time": {"type": "number", "description": "Finish time (ms since epoch)"}, "name": {"type": "string", "description": "Subtask name"}, "name_key": {"type": "string", "description": "Subtask name key"}, "notification_level": {"type": "string", "description": "Notification level"}, "progress_text": {"type": "array", "items": {"type": "string"}, "description": "Progress text"}, "start_time": {"type": "number", "description": "Start time (ms since epoch)"}, "state": {"type": "string", "description": "State of the subtask", "enum": ["PENDING", "RUNNING", "SUCCESS", "FAILURE", "CANCELLED"]}, "total_stages": {"type": "integer", "nullable": true, "description": "Total stages"}}}}, "summary": {"type": "object", "required": ["total", "success", "failure", "pending", "cancelled", "running"], "properties": {"total": {"type": "integer"}, "success": {"type": "integer"}, "failure": {"type": "integer"}, "pending": {"type": "integer"}, "cancelled": {"type": "integer"}, "running": {"type": "integer"}}, "description": "Summary of subtask states for the pipeline"}, "terminated": {"type": "boolean", "description": "Has the pipeline been terminated?"}, "triggering_pipeline_id": {"type": "integer", "description": "Triggering pipeline ID"}, "user": {"type": "object", "required": ["id", "name"], "description": "Details of the user who created the pipeline", "properties": {"id": {"type": "integer", "description": "User ID of the pipeline creator"}, "name": {"type": "string", "description": "User name of the pipeline creator"}}}}}}, "pagination": {"type": "object", "description": "Pagination information", "properties": {"current_page": {"description": "The current page number", "type": "integer"}, "total_pages": {"description": "The total number of pages", "type": "integer"}, "total_records": {"description": "The total number of records", "type": "integer"}, "type": {"default": "page", "description": "The type of the pagination", "enum": ["page"], "type": "string"}}, "required": ["total_records", "current_page", "total_pages", "type"]}, "status": {"default": "success", "description": "The status of the response, in this context, the value will be \"success\".", "enum": ["success"], "type": "string"}}, "required": ["status", "data", "pagination"], "type": "object"}}}, "description": "List of pipelines"}, "default": {"content": {"application/json": {"schema": {"properties": {"code": {"description": "An error code that can be given to Cado support for further troubleshooting.", "type": "string"}, "data": {"description": "Any supporting data returned by the API that can help with further troubleshooting.", "type": "object"}, "message": {"description": "The error message returned by the API. In some cases, the message will contain a link to documentation for further troubleshooting.", "type": "string"}, "status": {"default": "error", "description": "The status of the response, in this context, the value will be \"error\".", "enum": ["error"], "type": "string"}}, "required": ["status", "message", "code"], "type": "object"}}}, "description": "A response indicating an error has occurred."}}, "security": [{"bearerAuth": []}], "summary": "List pipelines", "tags": ["Pipelines"], "x-Admin Only": "no", "x-Feature Lifecycle": "alpha"}}, "/api/v3/pipelines/{id}": {"get": {"description": "Get a pipeline by ID.", "parameters": [{"description": "Pipeline ID to retrieve.", "in": "path", "name": "id", "required": true, "schema": {"type": "integer"}}], "responses": {"200": {"content": {"application/json": {"schema": {"properties": {"data": {"type": "object", "required": ["aborted", "can_be_terminated", "created", "kick_off", "name", "pipeline", "subtasks", "summary", "terminated"], "properties": {"aborted": {"type": "boolean", "description": "Has the pipeline been aborted?"}, "can_be_terminated": {"type": "boolean", "description": "Can the pipeline be terminated?"}, "created": {"type": "number", "description": "Creation timestamp (ms since epoch)"}, "evidence": {"type": "object", "required": ["id", "name"], "description": "Details of the evidence the pipeline relates to", "properties": {"id": {"type": "integer", "description": "Evidence ID the pipeline relates to"}, "name": {"type": "string", "description": "Evidence name the pipeline relates to"}}}, "kick_off": {"type": "array", "description": "Details of the alert that kicked off the pipeline", "items": {"type": "string"}}, "name": {"type": "string", "description": "Pipeline name"}, "pipeline": {"type": "object", "required": ["id", "type"], "description": "Details of the pipeline", "properties": {"id": {"type": "integer", "description": "Pipeline ID"}, "type": {"type": "string", "description": "Type of pipeline", "enum": ["processing", "acquisition", "healthcheck", "inventory", "investigation_kicker", "accountdiscovery", "analysis", "remote_action"]}}}, "project": {"type": "object", "required": ["id", "name"], "description": "Details of the project the pipeline relates to", "properties": {"id": {"type": "integer", "description": "Project ID the pipeline relates to"}, "name": {"type": "string", "description": "Project name the pipeline relates to"}}}, "subtasks": {"type": "array", "description": "Details of the subtasks for the pipeline", "items": {"type": "object", "required": ["execution_duration", "finish_time", "name", "name_key", "notification_level", "progress_text", "start_time", "state"], "properties": {"execution_duration": {"type": "integer", "description": "Execution duration in seconds"}, "finish_time": {"type": "number", "description": "Finish time (ms since epoch)"}, "name": {"type": "string", "description": "Subtask name"}, "name_key": {"type": "string", "description": "Subtask name key"}, "notification_level": {"type": "string", "description": "Notification level"}, "progress_text": {"type": "array", "items": {"type": "string"}, "description": "Progress text"}, "start_time": {"type": "number", "description": "Start time (ms since epoch)"}, "state": {"type": "string", "description": "State of the subtask", "enum": ["PENDING", "RUNNING", "SUCCESS", "FAILURE", "CANCELLED"]}, "total_stages": {"type": "integer", "nullable": true, "description": "Total stages"}}}}, "summary": {"type": "object", "required": ["total", "success", "failure", "pending", "cancelled", "running"], "properties": {"total": {"type": "integer"}, "success": {"type": "integer"}, "failure": {"type": "integer"}, "pending": {"type": "integer"}, "cancelled": {"type": "integer"}, "running": {"type": "integer"}}, "description": "Summary of subtask states for the pipeline"}, "terminated": {"type": "boolean", "description": "Has the pipeline been terminated?"}, "triggering_pipeline_id": {"type": "integer", "description": "Triggering pipeline ID"}, "user": {"type": "object", "required": ["id", "name"], "description": "Details of the user who created the pipeline", "properties": {"id": {"type": "integer", "description": "User ID of the pipeline creator"}, "name": {"type": "string", "description": "User name of the pipeline creator"}}}}}, "status": {"default": "success", "description": "The status of the response, in this context, the value will be \"success\".", "enum": ["success"], "type": "string"}}, "required": ["status", "data"], "type": "object"}}}, "description": "Successful response with pipeline data."}, "default": {"content": {"application/json": {"schema": {"properties": {"code": {"description": "An error code that can be given to Cado support for further troubleshooting.", "type": "string"}, "data": {"description": "Any supporting data returned by the API that can help with further troubleshooting.", "type": "object"}, "message": {"description": "The error message returned by the API. In some cases, the message will contain a link to documentation for further troubleshooting.", "type": "string"}, "status": {"default": "error", "description": "The status of the response, in this context, the value will be \"error\".", "enum": ["error"], "type": "string"}}, "required": ["status", "message", "code"], "type": "object"}}}, "description": "A response indicating an error has occurred."}}, "security": [{"bearerAuth": []}], "summary": "Get pipeline", "tags": ["Pipelines"], "x-Admin Only": "no", "x-Feature Lifecycle": "alpha"}, "patch": {"description": "Update the attributes of a pipeline. Can also be used to cancel a pipeline, by updating the 'aborted' attribute to true.", "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "integer"}, "description": "ID of the pipeline to update."}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"type": "object", "required": ["aborted"], "properties": {"aborted": {"type": "boolean", "description": "Set to true to cancel the pipeline", "enum": [true]}}}}}}, "responses": {"200": {"content": {"application/json": {"schema": {"type": "object", "required": ["status", "data"], "properties": {"data": {"type": "object", "properties": {"pipeline_id": {"type": "integer", "description": "The ID of the updated pipeline."}}}, "status": {"type": "string", "enum": ["success"], "description": "The status of the response, in this context, the value will be \"success\".", "default": "success"}}}}}, "description": "The data containing the ID of the updated pipeline."}, "default": {"content": {"application/json": {"schema": {"properties": {"code": {"description": "An error code that can be given to Cado support for further troubleshooting.", "type": "string"}, "data": {"description": "Any supporting data returned by the API that can help with further troubleshooting.", "type": "object"}, "message": {"description": "The error message returned by the API. In some cases, the message will contain a link to documentation for further troubleshooting.", "type": "string"}, "status": {"default": "error", "description": "The status of the response, in this context, the value will be \"error\".", "enum": ["error"], "type": "string"}}, "required": ["status", "message", "code"], "type": "object"}}}, "description": "A response indicating an error has occurred."}}, "security": [{"bearerAuth": []}], "summary": "Update pipeline", "tags": ["Pipelines"], "x-Admin Only": "no", "x-Feature Lifecycle": "alpha"}}, "/api/v3/pipelines/{id}/logs": {"get": {"description": "Get the logs for a pipeline by ID.", "parameters": [{"description": "Pipeline ID to retrieve logs for.", "in": "path", "name": "id", "required": true, "schema": {"type": "integer"}}], "responses": {"200": {"description": "Zip file with logs", "content": {"application/zip": {"schema": {"type": "string", "format": "binary"}}}}, "default": {"content": {"application/json": {"schema": {"properties": {"code": {"description": "An error code that can be given to Cado support for further troubleshooting.", "type": "string"}, "data": {"description": "Any supporting data returned by the API that can help with further troubleshooting.", "type": "object"}, "message": {"description": "The error message returned by the API. In some cases, the message will contain a link to documentation for further troubleshooting.", "type": "string"}, "status": {"default": "error", "description": "The status of the response, in this context, the value will be \"error\".", "enum": ["error"], "type": "string"}}, "required": ["status", "message", "code"], "type": "object"}}}, "description": "A response indicating an error has occurred."}}, "security": [{"bearerAuth": []}], "summary": "Get pipeline logs", "tags": ["Pipelines"], "x-Admin Only": "no", "x-Feature Lifecycle": "alpha"}}, "/api/v3/pipelines/rerun": {"post": {"description": "Either rerun all the pipelines for a project or a single pipeline with a given ID.", "requestBody": {"content": {"application/json": {"schema": {"type": "object", "properties": {"pipeline_id": {"type": "integer", "description": "ID of the pipeline to rerun."}, "project_id": {"type": "integer", "description": "ID of the project to rerun all pipelines"}}}}}}, "responses": {"201": {"content": {"application/json": {"schema": {"type": "object", "required": ["status", "data"], "properties": {"data": {"type": "object", "properties": {"pipeline_ids": {"type": "array", "items": {"type": "integer"}, "description": "The IDs of the reran pipeline(s)."}}}, "status": {"type": "string", "enum": ["success"], "description": "The status of the response, in this context, the value will be \"success\".", "default": "success"}}}}}, "description": "Response containing the IDs of the reran pipeline(s)."}, "default": {"content": {"application/json": {"schema": {"properties": {"code": {"description": "An error code that can be given to Cado support for further troubleshooting.", "type": "string"}, "data": {"description": "Any supporting data returned by the API that can help with further troubleshooting.", "type": "object"}, "message": {"description": "The error message returned by the API. In some cases, the message will contain a link to documentation for further troubleshooting.", "type": "string"}, "status": {"default": "error", "description": "The status of the response, in this context, the value will be \"error\".", "enum": ["error"], "type": "string"}}, "required": ["status", "message", "code"], "type": "object"}}}, "description": "A response indicating an error has occurred."}}, "security": [{"bearerAuth": []}], "summary": "Rerun pipeline", "tags": ["Pipelines"], "x-Admin Only": "no", "x-Feature Lifecycle": "alpha"}}, "/api/v3/users": {"get": {"description": "Retrieve a list of all the users register in the platform. Only admin can access this resource.", "security": [{"bearerAuth": []}], "summary": "List of users", "tags": ["Users"], "x-Admin Only": "no", "x-Feature Lifecycle": "alpha", "parameters": [{"name": "page", "in": "query", "required": false, "schema": {"type": "integer", "default": 1}, "description": "Which page or results to return, ordered by username desc."}, {"name": "per_page", "in": "query", "required": false, "schema": {"type": "integer", "default": 10}, "description": "How many results per page, ordered by username desc."}, {"name": "order_by", "in": "query", "required": false, "schema": {"type": "string", "enum": ["username", "-username"], "default": "-username"}, "description": "How results should be ordered"}], "responses": {"200": {"description": "List of users", "content": {"application/json": {"schema": {"required": ["status", "data", "pagination"], "type": "object", "properties": {"data": {"type": "array", "items": {"type": "object", "required": ["id", "is_admin", "username", "login_type", "display_name"], "properties": {"id": {"type": "integer", "description": "user id"}, "is_admin": {"type": "boolean", "description": "is user an admin"}, "username": {"type": "string", "description": "username"}, "login_type": {"type": "integer", "description": "what type of login"}, "display_name": {"type": "string", "description": "display name"}}}}, "pagination": {"type": "object", "properties": {"current_page": {"description": "The current page number", "type": "integer"}, "total_pages": {"description": "The total number of pages", "type": "integer"}, "total_records": {"description": "The total number of records", "type": "integer"}, "type": {"default": "page", "description": "The type of the pagination", "enum": ["page"], "type": "string"}}, "required": ["total_records", "current_page", "total_pages", "type"]}, "status": {"default": "success", "description": "The status of the response, in this context, the value will be \"success\".", "enum": ["success"], "type": "string"}}}}}}, "default": {"content": {"application/json": {"schema": {"properties": {"code": {"description": "An error code that can be given to Cado support for further troubleshooting.", "type": "string"}, "data": {"description": "Any supporting data returned by the API that can help with further troubleshooting.", "type": "object"}, "message": {"description": "The error message returned by the API. In some cases, the message will contain a link to documentation for further troubleshooting.", "type": "string"}, "status": {"default": "error", "description": "The status of the response, in this context, the value will be \"error\".", "enum": ["error"], "type": "string"}}, "required": ["status", "message", "code"], "type": "object"}}}, "description": "A response indicating an error has occurred."}}}, "post": {"x-Feature Lifecycle": "alpha", "x-Admin Only": "no", "summary": "Create new user", "description": "Create a new user in the platform (must login afterwards to generate access token).", "tags": ["Users"], "security": [{"bearerAuth": []}], "parameters": [], "requestBody": {"required": true, "content": {"application/json": {"schema": {"type": "object", "required": ["username", "password", "password_confirm"], "properties": {"username": {"type": "string", "description": "Username to create"}, "password": {"type": "string", "description": "Password to use"}, "password_confirm": {"type": "string", "description": "Repeat the password for confirmation"}, "is_admin": {"type": "boolean", "description": "whether user is an admin"}}}}}}, "responses": {"default": {"description": "A response indicating an error has occurred.", "content": {"application/json": {"schema": {"type": "object", "required": ["status", "message", "code"], "properties": {"status": {"type": "string", "description": "The status of the response, in this context, the value will be \"error\".", "default": "error", "enum": ["error"]}, "message": {"type": "string", "description": "The error message returned by the API. In some cases, the message will contain a link to documentation for further troubleshooting."}, "code": {"type": "string", "description": "An error code that can be given to Cado support for further troubleshooting."}, "data": {"type": "object", "description": "Any supporting data returned by the API that can help with further troubleshooting."}}}}}}, "201": {"description": "Returns the user object", "content": {"application/json": {"schema": {"type": "object", "required": ["status", "data"], "properties": {"status": {"enum": ["success"], "type": "string", "description": "The status of the response, in this context, the value will be \"success\".", "default": "success"}, "data": {"type": "object", "description": "Returns the user object", "required": ["username", "id", "display_name", "is_admin", "login_type"], "properties": {"username": {"type": "string"}, "id": {"type": "integer"}, "display_name": {"type": "string"}, "is_admin": {"type": "boolean"}, "login_type": {"type": "integer"}}}}}}}}}}}, "/api/v3/users/{id}": {"delete": {"description": "Delete user record", "security": [{"bearerAuth": []}], "summary": "Delete user record", "tags": ["Users"], "x-Admin Only": "yes", "x-Feature Lifecycle": "alpha", "parameters": [{"description": "User id", "in": "path", "name": "id", "required": true, "schema": {"type": "integer"}}], "responses": {"default": {"content": {"application/json": {"schema": {"properties": {"code": {"description": "An error code that can be given to Cado support for further troubleshooting.", "type": "string"}, "data": {"description": "Any supporting data returned by the API that can help with further troubleshooting.", "type": "object"}, "message": {"description": "The error message returned by the API. In some cases, the message will contain a link to documentation for further troubleshooting.", "type": "string"}, "status": {"default": "error", "description": "The status of the response, in this context, the value will be \"error\".", "enum": ["error"], "type": "string"}}, "required": ["status", "message", "code"], "type": "object"}}}, "description": "A response indicating an error has occurred."}, "200": {"content": {"application/json": {"schema": {"properties": {"status": {"default": "success", "description": "The status of the response, in this context, the value will be \"success\".", "enum": ["success"], "type": "string"}}, "required": ["status"], "type": "object"}}}, "description": ""}}}, "patch": {"description": "Update a user details - can change username or password.", "security": [{"bearerAuth": []}], "summary": "Update a user's details", "tags": ["Users"], "x-Admin Only": "yes", "x-Feature Lifecycle": "alpha", "parameters": [{"description": "User id", "in": "path", "name": "id", "required": true, "schema": {"type": "integer"}}], "requestBody": {"content": {"application/json": {"schema": {"type": "object", "required": ["username"], "properties": {"username": {"type": "string", "example": "yossi", "description": "new username"}, "password": {"type": "string", "example": "ThisIsStringPwd1!", "description": "minimum 8 characters containing at least one number and one uppercase"}, "password_confirm": {"type": "string", "example": "ThisIsStringPwd1!", "description": "retype the password - must must be provided when updating your own password"}, "current_password": {"type": "string", "example": "ThisIsMyOldPwd1!", "description": "your current password - must be provided when updating your own password"}, "reset_password": {"type": "boolean", "example": true, "description": "force reset another users password if True (requires admin)"}}}}}, "required": true}, "responses": {"default": {"content": {"application/json": {"schema": {"properties": {"code": {"description": "An error code that can be given to Cado support for further troubleshooting.", "type": "string"}, "data": {"description": "Any supporting data returned by the API that can help with further troubleshooting.", "type": "object"}, "message": {"description": "The error message returned by the API. In some cases, the message will contain a link to documentation for further troubleshooting.", "type": "string"}, "status": {"default": "error", "description": "The status of the response, in this context, the value will be \"error\".", "enum": ["error"], "type": "string"}}, "required": ["status", "message", "code"], "type": "object"}}}, "description": "A response indicating an error has occurred."}, "200": {"description": "User details", "content": {"application/json": {"schema": {"type": "object", "required": ["status", "data"], "properties": {"data": {"type": "object", "required": ["username", "id", "created", "display_name", "is_admin", "login_type", "temp_password"], "properties": {"username": {"type": "string"}, "id": {"type": "integer"}, "created": {"type": "string"}, "display_name": {"type": "string"}, "is_admin": {"type": "boolean"}, "login_type": {"type": "number"}, "temp_password": {"type": "string", "description": "only included if admin resets another user's password"}}}, "status": {"default": "success", "description": "The status of the response, in this context, the value will be \"success\".", "enum": ["success"], "type": "string"}}}}}}}}, "get": {"description": "Get individual user information such as id, username, etc..", "security": [{"bearerAuth": []}], "summary": "Get individual user information", "tags": ["Users"], "x-Admin Only": "no", "x-Feature Lifecycle": "alpha", "parameters": [{"description": "User id", "in": "path", "name": "id", "required": true, "schema": {"type": "integer"}}], "responses": {"200": {"description": "User detail", "content": {"application/json": {"schema": {"type": "object", "required": ["data", "status"], "properties": {"data": {"required": ["id", "is_admin", "username", "login_type", "display_name", "groups"], "type": "object", "properties": {"id": {"type": "integer"}, "is_admin": {"type": "boolean"}, "username": {"type": "string"}, "login_type": {"type": "integer"}, "display_name": {"type": "string"}, "groups": {"type": "array", "items": {"type": "object", "required": ["name", "roles"], "properties": {"name": {"type": "string"}, "roles": {"type": "array", "items": {"type": "object", "required": ["cloud_id", "provider"], "properties": {"cloud_id": {"type": "string"}, "provider": {"type": "string"}}}}}}}}}, "status": {"default": "success", "description": "The status of the response, in this context, the value will be \"success\".", "enum": ["success"], "type": "string"}}}}}}, "default": {"content": {"application/json": {"schema": {"properties": {"code": {"description": "An error code that can be given to Cado support for further troubleshooting.", "type": "string"}, "data": {"description": "Any supporting data returned by the API that can help with further troubleshooting.", "type": "object"}, "message": {"description": "The error message returned by the API. In some cases, the message will contain a link to documentation for further troubleshooting.", "type": "string"}, "status": {"default": "error", "description": "The status of the response, in this context, the value will be \"error\".", "enum": ["error"], "type": "string"}}, "required": ["status", "message", "code"], "type": "object"}}}, "description": "A response indicating an error has occurred."}}}}, "/api/v3/users/{user_id}/eula": {"patch": {"x-Feature Lifecycle": "beta", "x-Admin Only": "yes", "summary": "Update user's EULA details", "description": "Update user's EULA details.", "tags": ["EULA"], "security": [{"bearerAuth": []}], "externalDocs": {"description": "Find out more about our EULA here:", "url": "https://docs.cadosecurity.com/eula/commercial-eula"}, "parameters": [{"name": "user_id", "in": "path", "required": true, "schema": {"type": "integer"}, "description": "ID of the user signing the EULA."}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"type": "object", "required": ["eula_agreement", "eula_version"], "properties": {"eula_agreement": {"type": "string", "description": "Details of which agreement user has signed."}, "eula_version": {"type": "string", "description": "Version of agreement signed."}}}}}}, "responses": {"default": {"description": "A response indicating an error has occurred.", "content": {"application/json": {"schema": {"type": "object", "required": ["status", "message", "code"], "properties": {"status": {"type": "string", "enum": ["error"], "description": "The status of the response, in this context, the value will be \"error\".", "default": "error"}, "message": {"type": "string", "description": "The error message returned by the API. In some cases, the message will contain a link to documentation for further troubleshooting."}, "code": {"type": "string", "description": "An error code that can be given to Cado support for further troubleshooting."}, "data": {"type": "object", "description": "Any supporting data returned by the API that can help with further troubleshooting."}}}}}}, "200": {"description": "Details of the user's EULA agreement.", "content": {"application/json": {"schema": {"type": "object", "required": ["status", "data"], "properties": {"status": {"type": "string", "enum": ["success"], "description": "The status of the response, in this context, the value will be \"success\".", "default": "success"}, "data": {"type": "object", "description": "Data of the user and eula.", "schema": null, "required": ["id", "eula_agreement", "eula_version", "eula_sign_date"], "properties": {"id": {"description": "User ID", "type": "integer"}, "eula_agreement": {"description": "Details of which agreement user has signed", "type": "string"}, "eula_version": {"description": "Version of agreement signed", "type": "string"}, "eula_sign_date": {"description": "Epoch unix timestamp of when the user signed the EULA", "type": "number", "example": 1716398601.220793}}}}}}}}}}}, "/api/v3/import/aws/eks": {"post": {"x-Feature Lifecycle": "alpha", "x-Admin Only": "no", "summary": "Start an import of an EKS container into a specified project.", "description": "Start an import of a running EKS container into the specified project. The container will have Cado Host executed on it in order to grab a triage package. A processing pipeline will be returned that details the status of the processing of the EKS container triage package. Additional setup may be required for authenticating with EKS clusters, see <a href=\"https://docs.cadosecurity.com/cado-response/discovery-import/import/aws/aws-eks#eks-rbac-configuration\">our documentation</a> for details.", "tags": ["Import from AWS"], "security": [{"bearerAuth": []}], "externalDocs": {"url": "https://docs.cadosecurity.com/cado-response/discovery-import/import/aws/aws-eks", "description": "Additional documentation of the EKS import feature can be found here:"}, "parameters": [], "requestBody": {"required": true, "content": {"application/json": {"schema": {"type": "object", "required": ["cluster", "pod", "namespace", "container", "region", "project_id"], "properties": {"cluster": {"type": "string", "description": "The name of the EKS cluster which contains the container you wish to import."}, "pod": {"type": "string", "description": "The name of the Kubernetes pod which contains the container you wish to import."}, "namespace": {"type": "string", "description": "The Kubernetes namespace of the EKS pod which contains the container you wish to import."}, "container": {"type": "string", "description": "The name of the Kubernetes container that you wish to import data from."}, "region": {"type": "string", "description": "The AWS region where the EKS cluster is located."}, "project_id": {"type": "integer", "description": "The ID of the Cado project that you want to import the data into."}}}}}}, "responses": {"default": {"description": "A response indicating an error has occurred.", "content": {"application/json": {"schema": {"type": "object", "required": ["status", "message", "code"], "properties": {"status": {"type": "string", "description": "The status of the response, in this context, the value will be \"error\".", "default": "error", "enum": ["error"]}, "message": {"type": "string", "description": "The error message returned by the API. In some cases, the message will contain a link to documentation for further troubleshooting."}, "code": {"type": "string", "description": "An error code that can be given to Cado support for further troubleshooting."}, "data": {"type": "object", "description": "Any supporting data returned by the API that can help with further troubleshooting."}}}}}}, "200": {"description": "A new pipeline object is returned, indicating a successful kick-off of a pipeline. You can see the <a href=\"#\">Pipeline API</a> documentation for information on getting details about this pipeline.", "content": {"application/json": {"schema": {"type": "object", "required": ["status", "data"], "properties": {"status": {"enum": ["success"], "type": "string", "description": "The status of the response, in this context, the value will be \"success\".", "default": "success"}, "data": {"type": "object", "description": "The data containing the new processing pipeline.", "schema": null, "required": ["aborted", "created", "evidence_id", "name", "pipeline_id", "pipeline_type", "kick_off", "project_id", "subtasks", "user_id"], "properties": {"aborted": {"type": "boolean"}, "created": {"type": "number", "description": "Date and Time the pipeline was created at."}, "evidence_id": {"type": "integer", "description": "Evidence ID assigned to the pipeline."}, "name": {"type": "string", "description": "Name of the created pipeline. In the format of \"Acquiring {container_name}\""}, "pipeline_id": {"type": "integer", "description": "The numerical ID assigned to the pipeline."}, "pipeline_type": {"type": "string", "description": "The type of pipeline that was created. This will always be \"acquisition\"."}, "triggering_pipeline": {"type": "integer"}, "kick_off": {"type": "array", "items": {"type": "string"}}, "project_id": {"type": "integer", "description": "The ID of the project that the pipeline belongs to."}, "subtasks": {"type": "array", "description": "A list of subtasks created inside the pipeline.", "items": {"type": "object", "required": ["id"], "properties": {"id": {"type": "string", "description": "A unique identifier given to the created subtask."}}}}, "user_id": {"type": "integer", "description": "The ID of the user who triggered the pipeline."}}}}}}}}}}}, "/api/v3/import/aws/eks/clusters": {"get": {"x-Feature Lifecycle": "alpha", "x-Admin Only": "no", "summary": "Browse a list of EKS clusters in a specific AWS region.", "description": "Browse a list of EKS clusters in a specific AWS region inside your chosen AWS account. Additional setup may be required for authenticating with EKS clusters, see <a href=\"https://docs.cadosecurity.com/cado-response/discovery-import/import/aws/aws-eks#eks-rbac-configuration\">our documentation</a> for details.", "tags": ["Import from AWS"], "security": [{"bearerAuth": []}], "externalDocs": {"url": "https://docs.cadosecurity.com/cado-response/discovery-import/import/aws/aws-eks", "description": "Additional documentation of the EKS import feature can be found here:"}, "parameters": [{"name": "cloud_id", "in": "query", "required": true, "schema": {"type": "string"}, "description": "The alias of the chosen AWS account to browse. See the <a href=\"#\">Clouds API</a> documentation for more info on obtaining the cloud_id for a specific AWS account."}, {"name": "region", "in": "query", "required": true, "schema": {"type": "string"}, "description": "The AWS region to browse EKS clusters in."}, {"name": "cursor", "in": "query", "required": false, "schema": {"type": "string"}, "description": "The pointer to the next page given by the response of the previous/current page."}, {"name": "max_items", "in": "query", "required": false, "schema": {"type": "integer", "default": 25, "enum": [25, 50, 75, 100]}, "description": "The amount of items to be given per page. If left blank, the default will be 25."}], "responses": {"default": {"description": "A response indicating an error has occurred.", "content": {"application/json": {"schema": {"type": "object", "required": ["status", "message", "code"], "properties": {"status": {"type": "string", "default": "error", "enum": ["error"], "description": "The status of the response, in this context, the value will be \"error\"."}, "message": {"type": "string", "description": "The error message returned by the API. In some cases, the message will contain a link to documentation for further troubleshooting."}, "code": {"type": "string", "description": "An error code that can be given to Cado support for further troubleshooting."}, "data": {"type": "object", "description": "Any supporting data returned by the API that can help with further troubleshooting."}}}}}}, "200": {"description": "A successful response, containing a list of EKS clusters.", "content": {"application/json": {"schema": {"type": "object", "required": ["status", "data", "pagination"], "properties": {"status": {"enum": ["success"], "type": "string", "description": "The status of the response, in this context, the value will be \"success\".", "default": "success"}, "data": {"type": "array", "description": "The data containing the list of EKS clusters", "items": {"type": "string"}}, "pagination": {"type": "object", "description": "Pagination information that allows you to browse pages of clusters.", "required": ["type", "current_token", "next_token", "previous_token"], "properties": {"type": {"type": "string", "enum": ["cursor"], "default": "cursor", "description": "A string indicating the type of pagination supported by the API. In this context, the value will be \"cursor\"."}, "current_token": {"type": "string", "description": "A string representing the pointer to this current page."}, "next_token": {"type": "string", "description": "A string representing a cursor to the next page. Use this in place of the `cursor` attribute to get the next page."}, "previous_token": {"type": "string", "description": "A string representing a cursor to the previous page. Use this in place of the `cursor` attribute to get the previous page."}}}}}}}}}}}, "/api/v3/import/aws/eks/pods": {"get": {"x-Feature Lifecycle": "alpha", "x-Admin Only": "no", "summary": "Browse a list of Kubernetes pods in a specific EKS cluster.", "description": "Browse a list of Kubernetes pods in a specific EKS cluster inside your chosen AWS account. Additional setup may be required for authenticating with EKS clusters, see <a href=\"https://docs.cadosecurity.com/cado-response/discovery-import/import/aws/aws-eks#eks-rbac-configuration\">our documentation</a> for details.", "tags": ["Import from AWS"], "security": [{"bearerAuth": []}], "externalDocs": {"url": "https://docs.cadosecurity.com/cado-response/discovery-import/import/aws/aws-eks", "description": "Additional documentation of the EKS import feature can be found here:"}, "parameters": [{"name": "cloud_id", "in": "query", "required": true, "schema": {"type": "string"}, "description": "The alias of the chosen AWS account that the cluster resides in. See the <a href=\"#\">Clouds API</a> documentation for more info on obtaining the cloud_id for a specific AWS account."}, {"name": "region", "in": "query", "required": true, "schema": {"type": "string"}, "description": "The AWS region that the cluster resides in."}, {"name": "cluster", "in": "query", "required": true, "schema": {"type": "string"}, "description": "The name of the EKS container you want to browse in."}, {"name": "cursor", "in": "query", "required": false, "schema": {"type": "string"}, "description": "The pointer to the next page given by the response of the previous/current page."}, {"name": "max_items", "in": "query", "required": false, "schema": {"type": "integer", "default": 25, "enum": [25, 50, 75, 100]}, "description": "The amount of items to be given per page. If left blank, the default will be 25."}], "responses": {"default": {"description": "A response indicating an error has occurred.", "content": {"application/json": {"schema": {"type": "object", "required": ["status", "message", "code"], "properties": {"status": {"type": "string", "enum": ["error"], "default": "error", "description": "The status of the response, in this context, the value will be \"error\"."}, "message": {"type": "string", "description": "The error message returned by the API. In some cases, the message will contain a link to documentation for further troubleshooting."}, "code": {"type": "string", "description": "An error code that can be given to Cado support for further troubleshooting."}, "data": {"type": "object", "description": "Any supporting data returned by the API that can help with further troubleshooting."}}}}}}, "200": {"description": "A successful response, containing a list of Kubernetes pods.", "content": {"application/json": {"schema": {"type": "object", "required": ["status", "data", "pagination"], "properties": {"status": {"type": "string", "enum": ["success"], "description": "The status of the response, in this context, the value will be \"success\".", "default": "success"}, "data": {"type": "array", "items": {"type": "object", "description": "The data containing the list of Kubernetes pods.", "required": ["pods"], "properties": {"pods": {"type": "array", "description": "A list of Kubernetes pods.", "items": {"type": "object", "required": ["pod", "namespace"], "properties": {"name": {"type": "string", "description": "The name of the Kuberentes pod."}, "namespace": {"type": "string", "description": "The namespace of the Kubernetes pod."}}}}}}}, "pagination": {"type": "object", "description": "Pagination information that allows you to browse pages of clusters.", "required": ["type", "current_token", "next_token", "previous_token"], "properties": {"type": {"type": "string", "enum": ["cursor"], "default": "cursor", "description": "A string indicating the type of pagination supported by the API. In this context, the value will be \"cursor\"."}, "current_token": {"type": "string", "description": "A string representing the pointer to this current page."}, "next_token": {"type": "string", "description": "A string representing a cursor to the next page. Use this in place of the `cursor` attribute to get the next page."}, "previous_token": {"type": "string", "description": "A string representing a cursor to the previous page. Use this in place of the `cursor` attribute to get the previous page."}}}}}}}}}}}, "/api/v3/import/aws/eks/containers": {"get": {"x-Feature Lifecycle": "alpha", "x-Admin Only": "no", "summary": "Browse a list of Kubernetes containers in a specific EKS cluster.", "description": "Browse a list of Kubernetes containers in a specific EKS cluster inside your chosen AWS account. Additional setup may be required for authenticating with EKS clusters, see <a href=\"https://docs.cadosecurity.com/cado-response/discovery-import/import/aws/aws-eks#eks-rbac-configuration\">our documentation</a> for details.", "tags": ["Import from AWS"], "security": [{"bearerAuth": []}], "externalDocs": {"url": "https://docs.cadosecurity.com/cado-response/discovery-import/import/aws/aws-eks", "description": "Additional documentation of the EKS import feature can be found here:"}, "parameters": [{"name": "cloud_id", "in": "query", "required": true, "schema": {"type": "string"}, "description": "The alias of the chosen AWS account that the cluster resides in. See the <a href=\"#\">Clouds API</a> documentation for more info on obtaining the cloud_id for a specific AWS account."}, {"name": "region", "in": "query", "required": true, "schema": {"type": "string"}, "description": "The AWS region that the cluster resides in."}, {"name": "cluster", "in": "query", "required": true, "schema": {"type": "string"}, "description": "The name of the EKS container you want to browse in."}, {"name": "pod", "in": "query", "required": true, "schema": {"type": "string"}, "description": "The name of the Kubernetes pod you want to browse in."}, {"name": "namespace", "in": "query", "required": true, "schema": {"type": "string"}, "description": "The Kubernetes namespace of the specified pod."}, {"name": "cursor", "in": "query", "required": false, "schema": {"type": "string"}, "description": "The pointer to the next page given by the response of the previous/current page."}, {"name": "max_items", "in": "query", "required": false, "schema": {"type": "integer", "default": 25, "enum": [25, 50, 75, 100]}, "description": "The amount of items to be given per page. If left blank, the default will be 25."}], "responses": {"default": {"description": "A response indicating an error has occurred.", "content": {"application/json": {"schema": {"type": "object", "required": ["status", "message", "code"], "properties": {"status": {"type": "string", "enum": ["error"], "default": "error", "description": "The status of the response, in this context, the value will be \"error\"."}, "message": {"type": "string", "description": "The error message returned by the API. In some cases, the message will contain a link to documentation for further troubleshooting."}, "code": {"type": "string", "description": "An error code that can be given to Cado support for further troubleshooting."}, "data": {"type": "object", "description": "Any supporting data returned by the API that can help with further troubleshooting."}}}}}}, "200": {"description": "A successful response, containing a list of Kubernetes containers.", "content": {"application/json": {"schema": {"type": "object", "required": ["status", "data", "pagination"], "properties": {"status": {"enum": ["success"], "type": "string", "description": "The status of the response, in this context, the value will be \"success\".", "default": "success"}, "data": {"type": "array", "items": {"type": "object", "description": "The data containing the list of Kubernetes containers.", "required": ["containers"], "properties": {"containers": {"type": "array", "description": "A list of Kubernetes containers.", "items": {"type": "object", "required": ["name", "image", "pod"], "properties": {"name": {"type": "string", "description": "The name of the Kuberentes container."}, "image": {"type": "string", "description": "The name of the Docker or ECR image running on the container."}, "pod": {"type": "string", "description": "The name of the Kubernetes pod where the container is running."}}}}}}}, "pagination": {"type": "object", "description": "Pagination information that allows you to browse pages of clusters.", "required": ["type", "current_token", "next_token", "previous_token"], "properties": {"type": {"type": "string", "enum": ["cursor"], "default": "cursor", "description": "A string indicating the type of pagination supported by the API. In this context, the value will be \"cursor\"."}, "current_token": {"type": "string", "description": "A string representing the pointer to this current page."}, "next_token": {"type": "string", "description": "A string representing a cursor to the next page. Use this in place of the `cursor` attribute to get the next page."}, "previous_token": {"type": "string", "description": "A string representing a cursor to the previous page. Use this in place of the `cursor` attribute to get the previous page."}}}}}}}}}}}}}